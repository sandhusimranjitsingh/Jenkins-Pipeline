pipeline {
    agent any
    stages {
        stage("Print Workspace Directory") {
            steps {
                sh "pwd"
            }
        }
        stage("Build") {
            steps {
                echo "Task: compile and pack the code!!!!!##########"
                echo "Tool: Maven"
            }
            post {
                always {
                    archiveArtifacts artifacts: '**/build.log', allowEmptyArchive: true
                }
            }
        }
        stage("Unit and Integration Tests") {
            steps {
                echo "Task: runs unit test to ensure the code functions as expected and run integration test to ensure the different components of the application works as expected"
                echo "Tool: Junit test"
            }
            post {
                always {
                    archiveArtifacts artifacts: '**/unit_integration_tests.log', allowEmptyArchive: true
                }
            }
        }
        stage("Code Analysis") {
            steps {
                echo "integrate a code analysis tool to analyse the code and ensure it meets industry standards"
                echo "Tool: Checkstyle"
            }
        }
        stage("Security check") {
            steps {
                echo "perform a security scan on the code using a tool to identify any vulnerability"
                echo "Tool: SonarQube"
            }
            post {
                always {
                    archiveArtifacts artifacts: '**/security_check.log', allowEmptyArchive: true
                }
            }
        }
        stage("Deploying to Staging") {
            steps {
                echo "deploying the application to a staging server like AWS EC2"
                echo "Tool: Jenkins deployment plugins"
            }
        }
        stage("Integration tests on Staging") {
            steps {
                echo "run integration tests on the staging environment to ensure the application functions as expected"
                echo "Tool: Selenium"
            }
            post {
                always {
                    archiveArtifacts artifacts: '**/integration_tests.log', allowEmptyArchive: true
                }
            }
        }
        stage("Deploying to Production") {
            steps {
                echo "deploy the application to the production server like AWS EC2"
                echo "Tool: Jenkins deployment plugins"
            }
        }
    }
    post {
        always {
            script {
                def logFiles = findFiles(glob: '**/*.log')
                echo "Found ${logFiles.size()} log files"
            }
            emailext (
                to: "sssandhu.singh387@gmail.com",
                subject: "Pipeline Status Email",
                body: "Pipeline execution completed",
                attachmentsPattern: "**/*.log"
            )
        }
    }
}
